//------------------------------------------------------------------------------
//        This code was generated by myriad.
//        Changes to this file will be lost when the code is regenerated.
//------------------------------------------------------------------------------



namespace Feliz

open Myriad.Plugins
open Fable.Core.JsInterop
open Fable.Core

type IButtonProperty =
    interface
    end

[<RequireQualifiedAccess>]
[<Erase>]
module Interop =
    let inline mkButtonAttr (key: string) (value: obj) : IButtonProperty = unbox (key, value)


type Layout =
    { Header: obj
      Content: obj
      Footer: obj }

[<Erase>]

type button() =
    static member inline children(elements: Fable.React.ReactElement list) =
        unbox<Interop.inlined> (prop.children elements)

    static member inline classNames1(value: string) = Interop.mkButtonAttr "className" value

    static member inline className2(names: seq<string>) =
        Interop.mkButtonAttr "className" (String.concat " " names)

    static member inline classNames(value: string) = Interop.mkButtonAttr "className" value

    static member inline className(names: seq<string>) =
        Interop.mkButtonAttr "className" (String.concat " " names)

    static member inline disabled(value: bool) = Interop.mkButtonAttr "disabled" value

[<Erase>]

type Antd =
    class
        static member inline button(properties: Interop.inlined list) =
            Interop.reactApi.createElement (import "Layout" "antd", createObj !!properties)
    end