//------------------------------------------------------------------------------
//        This code was generated by myriad.
//        Changes to this file will be lost when the code is regenerated.
//------------------------------------------------------------------------------



namespace Feliz

open Fable.Core.JsInterop
open Fable.Core
open Feliz

type IButtonProperty =
    interface
    end

[<RequireQualifiedAccess>]
[<Erase>]
module Interop =
    let inline mkButtonAttr (key: string) (value: obj) : IButtonProperty = unbox (key, value)

[<Erase>]
module RootModule =

    type ColFlex =
        | Number of value: int
        | None
        | Auto
        | String of value: string


    type Layout =
        { Headersss: obj
          Content: obj
          Footer: obj }

    [<Erase>]

    type button() =
        static member inline children(elements: Fable.React.ReactElement list) =
            unbox<IButtonProperty> (prop.children elements)

        static member inline classNames(value: string) = Interop.mkButtonAttr "className" value

        static member inline className(names: seq<string>) =
            Interop.mkButtonAttr "className" (String.concat " " names)

        static member inline disabled(value: bool) = Interop.mkButtonAttr "disabled" value

        static member inline flex(value: ColFlex) =
            let attr = "flex"
            let fn = Interop.mkButtonAttr

            match value with
            | None -> fn attr "none"
            | Auto -> fn attr "auto"
            | String value -> fn attr value
            | Number value -> fn attr value

[<Erase>]

type Antd =
    class
        static member inline button(properties: IButtonProperty list) =
            Interop.reactApi.createElement (import "Layout" "antd", createObj !!properties)
    end

